diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 427ae19..9e8c5c0 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.3)
+cmake_minimum_required(VERSION 3.2)
 project(QZXing)
 
 find_package(Qt5 COMPONENTS Core REQUIRED)
@@ -13,6 +13,18 @@ SET(ZXING_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/zxing/zxing)
 set(CMAKE_AUTOMOC ON)
 set(CMAKE_WARN_ON)
 
+set(QZXING_MULTIMEDIA ON)
+set(QZXING_USE_QML ON)
+
+add_definitions(
+ -DQZXING_QML
+ -DQZXING_MULTIMEDIA
+ -DQZXING_LIBRARY
+ -DZXING_ICONV_CONST
+ -DDISABLE_LIBRARY_FEATURES
+ -DENABLE_DECODER_QR_CODE
+)
+
 set(SOURCES
 
     CameraImageWrapper.cpp
@@ -24,8 +36,13 @@ set(SOURCES
     QZXing_global.h
     )
 
-if(QZXING_MULTIMEDIA)
+SET(INSTALL_HEADERS
+    QZXing.h
+    QZXing_global.h
+    )
 
+if(QZXING_MULTIMEDIA)
+    LIST(APPEND INSTALL_HEADERS QZXingFilter.h)
     LIST(APPEND SOURCES QZXingFilter.cpp QZXingFilter.h)
     add_definitions(-DQZXING_MULTIMEDIA)
 
@@ -33,15 +50,14 @@ if(QZXING_MULTIMEDIA)
 
 endif(QZXING_MULTIMEDIA)
 
+message(STATUS "Configuring QXZing library with QZXING_USE_QML: ${QZXING_USE_QML}")
+
 if(QZXING_USE_QML)
+    LIST(APPEND INSTALL_HEADERS QZXingImageProvider.h)
     LIST(APPEND SOURCES QZXingImageProvider.cpp QZXingImageProvider.h)
     add_definitions(-DQZXING_QML)
 endif(QZXING_USE_QML)
 
-if(QZXING_USE_ENCODER)
-    add_definitions(-DENABLE_ENCODER_GENERIC -DENABLE_ENCODER_QR_CODE)
-endif(QZXING_USE_ENCODER)
-
 add_library(qzxing "" ${SOURCES})
 
 if(WIN32)
@@ -53,10 +69,6 @@ if(WIN32)
     add_definitions(-DNO_ICONV)
 endif(WIN32)
 
-if(ANDROID)
-    add_definitions(-DNO_ICONV)
-endif()
-
 if(VS_WINRT_COMPONENT)
     add_definitions(-DNO_ICONV)
 endif(VS_WINRT_COMPONENT)
@@ -69,7 +81,6 @@ target_link_libraries(qzxing Qt5::Core Qt5::Gui)
 
 if(QZXING_MULTIMEDIA)
     target_link_libraries(qzxing Qt5::Multimedia)
-    target_compile_definitions(qzxing PUBLIC -DQZXING_MULTIMEDIA)
 endif(QZXING_MULTIMEDIA)
 
 if(QZXING_USE_QML)
@@ -77,38 +88,8 @@ if(QZXING_USE_QML)
         Qt5::Svg
         Qt5::Quick
         Qt5::QuickControls2)
-    target_compile_definitions(qzxing PUBLIC -DQZXING_QML)
 endif(QZXING_USE_QML)
 
-if(QZXING_USE_ENCODER)
-    target_compile_definitions(qzxing PUBLIC -DENABLE_ENCODER_GENERIC -DENABLE_ENCODER_QR_CODE)
-endif(QZXING_USE_ENCODER)
-
-if(QZXING_USE_DECODER_QR_CODE)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_QR_CODE)
-endif()
-
-if(QZXING_USE_DECODER_1D_BARCODES)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_1D_BARCODES)
-endif()
-
-if(QZXING_USE_DECODER_DATA_MATRIX)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_DATA_MATRIX)
-endif()
-
-if(QZXING_USE_DECODER_AZTEC)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_AZTEC)
-endif()
-
-if(QZXING_USE_DECODER_PDF17)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_PDF17)
-endif()
-
-if(QZXING_USE_DECODER_1D_BARCODES)
-    target_compile_definitions(qzxing PRIVATE -DENABLE_DECODER_1D_BARCODES)
-endif()
-
-
 # Change Global Definitions depending on how you want to use the library
 target_compile_definitions(qzxing PUBLIC DISABLE_LIBRARY_FEATURES)
 
@@ -124,3 +105,36 @@ target_include_directories(qzxing
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
 )
 
+# Install files
+
+if(NOT CMAKE_INSTALL_LIBDIR)
+    set (CMAKE_INSTALL_LIBDIR "lib")
+endif()
+
+set (CMAKECONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/QZXing")
+
+install (
+    TARGETS qzxing EXPORT QZXingTargets
+    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    INCLUDES DESTINATION include/qzxing
+)
+
+install (
+    EXPORT QZXingTargets
+    DESTINATION ${CMAKECONFIG_INSTALL_DIR} NAMESPACE QZXing::
+)
+
+install(FILES ${INSTALL_HEADERS} DESTINATION include/qzxing)
+
+include (CMakePackageConfigHelpers)
+
+configure_package_config_file (
+    QZXingConfig.cmake.in
+    QZXingConfig.cmake
+    INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}
+)
+
+install (
+    FILES "${CMAKE_CURRENT_BINARY_DIR}/QZXingConfig.cmake"
+    DESTINATION ${CMAKECONFIG_INSTALL_DIR}
+)
